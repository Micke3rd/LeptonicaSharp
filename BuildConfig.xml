<Builder>

	<!-- 
	####################################################
	Define the Size of the Array and Enumeration-Names for Properties
	This overwrites internal definitions of the Array-Size
	Semicolon Separates Arrays (Array(sx) of  Array (sy))
	####################################################
	-->
	
	<!-- Klassennamen immer in UPPERCASE -->
	<Class Name="SEL">
		<Parameter Name ="data">		<Size>sy;sx</Size>				</Parameter>
	</Class>
	<Class Name="PIX">
		<!-- Diese Parameter beziehen sich NUR auf das Property in der oben benannten Klasse! -->
		
		<!-- Placed here: Dim _data( [SIZE-PARAMETER] -1) as Byte -->
		<Parameter Name ="data">		<Size>(h * (wpl * 4))</Size>			</Parameter>
		<Parameter Name ="pixGetData">	<Size>(pix.h * (pix.wpl * 4))</Size>	</Parameter>
		<Parameter Name ="informat">	
			<!-- Wird nur ersetzt wenn informat ein Integer ist -->
			<Enum>IFF</Enum>							
		</Parameter>
		
		<!-- 
		#############################################################################################################
		If CONSTRUCTOR is selected the returned parameter must be the same as the class. (e.g. as Pix if  Class = Pix)
		Source will be replace by this class (me) and is always a optional value
		Choose only 1 Constructor with the same parameters.
		#############################################################################################################
		-->
		<Extend    Name="pixRead" 			Type="Construct" 	Source="pixs"/> 
		
		<!-- 
		#############################################################################################################
		If RETURN is selected the returned parameter must be the same as the class. (e.g. as Pix if  Class = Pix)
		All optional Values defined in this configuration will be applied.
		Source will be replace by this class (me) and is always a optional value
		Choose the most standard and default functions
		e.g. : "simplified interface", "Top-Level", "simple default values").
		e.g. pixConvert16to8 und pixConvert32to8 are Defaulted in pixConvertTo8.
		#############################################################################################################
		-->
		<Extend    Name="pixConvertTo32" 			Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="PixConvertTo16"  			Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixConvertTo8" 			Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixConvertTo4" 			Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixConvertTo2" 			Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixConvertTo1" 			Type="Function" 	Source="pixs" 		return="return"/>
		
		<Extend    Name="pixCopy" 					Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixDeskew" 				Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixInvert" 				Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixOrientCorrect" 			Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixBackgroundNormSimple" 	Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixCleanBackgroundToWhite" Type="Function" 	Source="pixs" 		return="return"/>
		<Extend    Name="pixGetRegionsBinary" 		Type="Function" 	Source="pixs" 		return="return"/>
		<Extend	   Name="pixConvertRGBToGray"		Type="Function"		Source="pixs"		return="return"/>
		<Extend	   Name="pixOctcubeQuantMixedWithGray" Type="Function"	Source="pixs"		return="return"/>
		<Extend    Name="pixGetColormap" 			Type="Function" 	Source="pix" 		return="return"/>
		<Extend    Name="pixSetColormap" 			Type="Function" 	Source="pix" 		return="return"/>
		
		
		<!-- 
		#############################################################################################################
		If Parameter is selected the returned parameter must be the same as the class and a ByRef Parameter of the Function
		Source will be replace by this class (me) and is always a optional value
		#############################################################################################################
		-->
		<Extend    Name="dewarpSinglePage" 	Type="Function" 	Source="pixs" 		return="ppixd"/>
		
		<!-- 
		#############################################################################################################
		No Return, But all ByRefs are returned
		#############################################################################################################
		-->
		<Extend    Name="pixConvertToPdf" 	Type="Sub" 			Source="pix"/>
		
	</Class>
	<Class Name="L_BYTEA">
		<Extend    Name="l_byteaCreate" 			Type="Construct" 	Source=""/>
		<Extend    Name="l_byteaInitFromMem" 		Type="Construct" 	Source=""/>
		<Extend    Name="l_byteaInitFromFile" 		Type="Construct" 	Source=""/>
		<Extend    Name="l_byteaAppendString" 		Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaAppendData" 		Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaCopy" 				Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaCopyData" 			Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaGetData" 			Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaJoin" 				Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaSplit" 				Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaWrite" 				Type="Function" 	Source="ba" 		return="return"/>
		<Extend    Name="l_byteaWriteStream" 		Type="Function" 	Source="ba" 		return="return"/>
	</Class>
	<Class Name="PIXCOLORMAP">
		<Extend    Name="pixcmapCreate" 			Type="Construct" 	Source=""/> 
		<Extend    Name="pixcmapGetCount" 			Type="Function" 	Source="cmap" 		return="return"/>
		<Extend    Name="pixcmapGetColor" 			Type="Function" 	Source="cmap" 		return="return"/>
		<Extend    Name="pixcmapAddColor" 			Type="Function" 	Source="cmap" 		return="return"/>
	</Class>
	
	<!-- Set defaults for functions (set to optional) and define return array size-->
	<Function Name="setLeptDebugOK">
		<RawCheck>If IsNothing(Natives.GetFullPathFromWindows("i_view32.exe")) Then MsgBox("I_View32.exe missing", MsgBoxStyle.Exclamation)</RawCheck>
	</Function>
	<Function Name="pixDeskewGeneral">
		<Parameter Name="thresh"><Default>0</Default></Parameter>
	</Function>
	<Function Name="pixCleanBackgroundToWhite">		
		<Parameter Name="gamma"><Default>1.0f</Default></Parameter>
		<Parameter Name="blackval"><Default>70</Default></Parameter>
		<Parameter Name="whiteval"><Default>180</Default></Parameter>
	</Function>
	<Function Name="pixSauvolaBinarize">		
		<Parameter Name="factor"><Default>0.35f</Default></Parameter>
		<Parameter Name="addborder"><Default>0</Default></Parameter>
	</Function>
	<Function Name="pixConvertToPdf">
		<Parameter Name="x"><Default>0</Default></Parameter>
		<Parameter Name="y"><Default>0</Default></Parameter>
		<Parameter Name="res"><Default>0</Default></Parameter>
		<Parameter Name="quality"><Default>0</Default></Parameter>
	</Function>
	<Function Name="convertToPdfData">
		<Parameter Name="x"><Default>0</Default></Parameter>
		<Parameter Name="y"><Default>0</Default></Parameter>
		<Parameter Name="res"><Default>0</Default></Parameter>
		<Parameter Name="quality"><Default>0</Default></Parameter>
	</Function>
	<Function Name="pixConvertToPdfData">
		<Parameter Name="x"><Default>0</Default></Parameter>
		<Parameter Name="y"><Default>0</Default></Parameter>
		<Parameter Name="res"><Default>0</Default></Parameter>
		<Parameter Name="quality"><Default>0</Default></Parameter>
	</Function>
	<Function Name="pixGetData">
		<Parameter Name="return"><Size>pix.w * pix.h * (pix.d/8)</Size></Parameter>
	</Function>
	<Function Name="create2dIntArray">
		<Parameter Name ="return"><Size>sy;sx</Size></Parameter>
	</Function>
	
	<!-- Alle Filename-Checks (only if parameter name = filename) -->
	<Function Name="boxaaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="boxaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="ccbaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixcmapRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="dewarpRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="dewarpaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="l_dnaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="l_dnaaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="fpixRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="dpixRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="gplotRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="readHeaderJp2k"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixReadJp2k"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixReadJpeg"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="readHeaderJpeg"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="kernelCreateFromFile"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="numaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="numaaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixaReadBoth"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixaaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixcompCreateFromFile"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixacompRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="readHeaderPng"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="isPngInterlaced"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="readHeaderPnm"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="ptaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="ptaaRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixReadWithHint"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixReadHeader"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="findFileFormat"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="ioFormatTest"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="recogRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="sarrayRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="sarrayAppend"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="selaCreateFromFile"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="readHeaderSpix"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="l_getStructStrFromFile"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="sudokuReadFile"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixReadTiff"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="pixaReadMultipageTiff"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="readHeaderTiff"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="l_binaryRead"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="l_binaryReadSelect"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="nbytesInFile"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="fileAppendString"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="fopenReadStream"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="lept_fopen"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="readHeaderWebP"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="getImpliedFileFormat"><Parameter Name="filename"><CheckFile/></Parameter></Function>
	<Function Name="l_byteaInitFromFile"><Parameter Name="fname"><CheckFile/></Parameter></Function>
	<Function Name="kernelRead"><Parameter Name="fname"><CheckFile/></Parameter></Function>
	<Function Name="selaRead"><Parameter Name="fname"><CheckFile/></Parameter></Function>
	<Function Name="selRead"><Parameter Name="fname"><CheckFile/></Parameter></Function>
	<Function Name="pixReadFromMultipageTiff"><Parameter Name="fname"><CheckFile/></Parameter></Function>
	<Function Name="l_fileDisplay"><Parameter Name="fname"><CheckFile/></Parameter></Function>

	<!-- 
	##########################################################
	Function without Name = All Functions
	Parameter Type = "PIX" => Parameter must be Pix (also Integer, ... possible)
	CheckComment Text = If this Comment occurs check the Array with the Prop
	... if  {1,2,4,8,16}.toarray.contains (Parameter.{PROP}) = false then
	##########################################################
	-->
	<Function>
		<Parameter Type="Single">
			<OptioComment Text="0.0 for default"><Default>0</Default>					</OptioComment>
		</Parameter>
		
		<Parameter Type="PIX">
			<CheckComment Text="1 bpp" 													Prop="d">{1}</CheckComment>
			<CheckComment Text="4 bpp"													Prop="d">{4}</CheckComment>
			<CheckComment Text="4 bpp, can be null" 									Prop="d">{4}</CheckComment>
			<CheckComment Text="8 bpp" 													Prop="d">{8}</CheckComment>
			<CheckComment Text="8 bpp grayscale" 										Prop="d">{8}</CheckComment>
			<CheckComment Text="8 bpp colormap OK" 										Prop="d">{8}</CheckComment>
			<CheckComment Text="8 bpp; colormap OK" 									Prop="d">{8}</CheckComment>
			<CheckComment Text="8 bpp; no colormap" 									Prop="d">{8}</CheckComment>
			<CheckComment Text="8 bpp grayscale; not colormapped" 						Prop="d">{8}</CheckComment>
			<CheckComment Text="16 bpp" 												Prop="d">{16}</CheckComment>
			<CheckComment Text="24 bpp rgb" 											Prop="d">{24}</CheckComment>
			<CheckComment Text="32 bpp RGB" 											Prop="d">{32}</CheckComment>
			<CheckComment Text="32 bpp or colormapped" 									Prop="d">{32}</CheckComment>
			<CheckComment Text="32 bpp rgb, not colormapped" 							Prop="d">{32}</CheckComment>
			<CheckComment Text="32 bpp, single component"	 							Prop="d">{32}</CheckComment>
			<CheckComment Text="1, 8 bpp"	 											Prop="d">{1,8}</CheckComment>
			<CheckComment Text="4 or 8 bpp"												Prop="d">{4,8}</CheckComment>
			<CheckComment Text="8 or 16 bpp grayscale"									Prop="d">{8,16}</CheckComment>
			<CheckComment Text="8 bpp grayscale, 32 bpp rgb, or colormapped" 			Prop="d">{8,16}</CheckComment>
			<CheckComment Text="2, 4 or 8 bpp grayscale" 								Prop="d">{2,4,8}</CheckComment>
			<CheckComment Text="8 bpp gray; 2, 4 or 8 bpp colormapped" 					Prop="d">{2,4,8}</CheckComment>
			<CheckComment Text="1, 8, 32 bpp" 				 							Prop="d">{1,8,32}</CheckComment>
			<CheckComment Text="1, 2, 4, 8 bpp, not cmapped"							Prop="d">{1,2,4,8}</CheckComment>
			<CheckComment Text="1, 2, 4, 8, 16 bpp; can be colormapped"			 	 	Prop="d">{1,2,4,8,16}</CheckComment>
			<CheckComment Text="1, 2, 4, 8, 32 bpp"										Prop="d">{1,2,4,8,32}</CheckComment>
			<CheckComment Text="1, 2, 4, 8, 32 bpp colormap OK but will be removed" 	Prop="d">{1,2,4,8,32}</CheckComment>
			<CheckComment Text="1, 2, 4, 8, 16, 32 bpp"	 	 							Prop="d">{1,2,4,8,16,32}</CheckComment>
			<CheckComment Text="1, 2, 4, 8, 16 or 32 bpp"	 	 						Prop="d">{1,2,4,8,16,32}</CheckComment>
			<CheckComment Text="1, 2, 4, 8, 16, with or without colormap or 32 bpp rgb" Prop="d">{1,2,4,8,16,32}</CheckComment>
		</Parameter>

		<Parameter Name ="informat">	
			<!-- Wird nur ersetzt wenn informat ein Integer ist -->
			<Enum>IFF</Enum>							
		</Parameter>
		<Parameter Name ="format">
			<!-- Wird nur ersetzt wenn format ein Integer ist -->
			<Enum>IFF</Enum>			
		</Parameter>
		<Parameter Name="reduction"> 
			<!-- Check a specific Range -->
			<CheckRange>2-16</CheckRange>	
		</Parameter> 	 
		<Parameter Name="debug"> 
			<!-- Set Enum DebugOnOff instead of Integer -->
			<Enum>DebugOnOff</Enum>				
			<Default>DebugOnOff.DebugOn</Default>
		</Parameter>
		<Parameter Name="redsearch"> 		
			<Default>0</Default>
			<CheckArray>{0,1,2,4,8}</CheckArray>
		</Parameter>
		<Parameter Name="redsweep"> 		
			<Default>0</Default>
			<CheckArray>{0,1,2,4,8}</CheckArray>
		</Parameter>
		<Parameter Name="scalex"> 		
			<Default>1</Default>
		</Parameter>
		<Parameter Name="scaley"> 		
			<Default>1</Default>
		</Parameter>
	</Function>
	
</Builder>